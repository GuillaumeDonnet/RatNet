jobs:
  might_release:
    runs-on: ubuntu-latest
    env:
      TOKEN_NAME: "LabRat"
      TOKEN_SYMBOL: "LAB"
      TOKEN_DECIMALS: "6"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23.2'  # Ensure this matches your local Go version

      - name: Install Specific Ignite CLI Version
        run: |
          curl -L https://github.com/ignite/cli/releases/download/v38.5.3/ignite_38.5.3_linux_amd64.tar.gz -o ignite.tar.gz
          tar -xzf ignite.tar.gz -C /tmp
          sudo mv /tmp/ignite /usr/local/bin/ignite
          ignite version
        env:
          DO_NOT_TRACK: 1

      - name: Verify Ignite CLI Installation
        run: |
          which ignite
          ignite version

      - name: Prepare Release Variables
        id: vars
        uses: ignite/cli/actions/release/vars@main

      - name: Check Current Directory
        run: pwd

      - name: List Repository Files
        run: ls -la

      - name: Display Go Environment
        run: go env

      - name: Validate go.mod
        run: go mod tidy

      - name: Display Go Modules
        run: go list -m all

      - name: Show Ignite CLI Path
        run: which ignite

      - name: Show Ignite CLI Version
        run: ignite version

      - name: Build Chain
        if: ${{ steps.vars.outputs.should_release == 'true' }}
        run: |
          ignite chain build --release --release.prefix "${{ steps.vars.outputs.tarball_prefix }}" -t linux:amd64 -t darwin:amd64 -t darwin:arm64 -y
        env:
          DO_NOT_TRACK: 1

      - name: Delete the "latest" Release
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        if: ${{ steps.vars.outputs.is_release_type_latest == 'true' }}
        with:
          tag_name: ${{ steps.vars.outputs.tag_name }}
          delete_release: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish the Release
        uses: softprops/action-gh-release@v1
        if: ${{ steps.vars.outputs.should_release == 'true' }}
        with:
          tag_name: ${{ steps.vars.outputs.tag_name }}
          files: release/*
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
